@use '@angular/material' as mat;
@use '../../ng-mat-components' as fsc;
@use './styling/palettes';

@import 'material-icons/iconfont/material-icons.scss';

@include mat.core();

@include fsc.normalize();
@include fsc.core();
@include fsc.roboto();

$my-typography: mat.define-typography-config(
  $font-family: 'Roboto-local',
);

// Define a dark theme
$dark-theme: mat.define-dark-theme(
  (
    color: (
      primary: mat.define-palette(palettes.$md-primary),
      accent: mat.define-palette(palettes.$md-accent),
    ),
    // Only include `typography` and `density` in the default dark theme.
    typography: $my-typography,
    density: 0,
  )
);

// Define a light theme
$light-theme: mat.define-light-theme(
  (
    color: (
      primary: mat.define-palette(palettes.$md-primary),
      accent: mat.define-palette(palettes.$md-accent),
    ),
  )
);

// Apply the dark theme by default
@include mat.all-component-themes($dark-theme);
@include fsc.all-component-themes($dark-theme);

// Apply the light theme only when the user prefers light themes.
@media (prefers-color-scheme: light) {
  // Use the `-color` mixins to only apply color styles without reapplying the same
  // typography and density styles.
  @include mat.all-component-colors($light-theme);
  @include fsc.all-component-themes($light-theme);
}

html * {
  font-family: 'Roboto-local';
}

.dense-search {
  @include mat.form-field-density(-5);

  .mat-mdc-form-field-subscript-wrapper {
    display: none;
  }
}
